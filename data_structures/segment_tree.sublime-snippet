<snippet>
	<content><![CDATA[
struct segTree {
    vi tree;
    segTree(ll n) {
        tree.assign(4 * n, 0);
    }
 
    ll build(ll v, ll l, ll r, vi&ls) {
        if (l == r) { 
            return tree[v] = ls[l];
        }
        ll m = (l + r) >> 1;
        return tree[v] = build(2 * v, l, m, ls) + build(2 * v + 1, m + 1, r, ls);
    }
 
    void update(ll v, ll tl, ll tr, ll ind, ll val) {
        if (tl == tr) {
            tree[v] = val;
            return;
        }
        ll m = (tl + tr) >> 1;
        if (ind <= m) update(2 * v, tl, m, ind, val);
        else update(2 * v + 1, m + 1, tr, ind, val);
        tree[v] = tree[2 * v] + tree[2 * v + 1];
    }
 
    ll get(ll v, ll tl, ll tr, ll l, ll r) {
        if (tl > r || tr < l) return 0ll;
        if (tl >= l && tr <= r) {
            return tree[v];
        }
        ll m = (tl + tr) >> 1;
        return get(2 * v, tl, m, l, r) + get(2 * v + 1, m + 1, tr, l, r);
    }
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>segtree</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
